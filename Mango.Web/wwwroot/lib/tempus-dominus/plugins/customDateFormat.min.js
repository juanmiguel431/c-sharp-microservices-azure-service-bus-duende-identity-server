!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):((t="undefined"!=typeof globalThis?globalThis:t||self).tempusDominus=t.tempusDominus||{},t.tempusDominus.plugins=t.tempusDominus.plugins||{},t.tempusDominus.plugins.customDateFormat=e())}(this,function(){"use strict";class i{constructor(t,e){this.REGEX_FORMAT=/\[([^\]]+)]|y{1,4}|M{1,4}|d{1,4}|H{1,2}|h{1,2}|t|T|m{1,2}|s{1,2}|Z{1,2}/g,this.englishFormats={LTS:"h:mm:ss T",LT:"h:mm T",L:"MM/dd/yyyy",LL:"MMMM d, yyyy",LLL:"MMMM d, yyyy h:mm T",LLLL:"dddd, MMMM d, yyyy h:mm T"},this.formattingTokens=/(\[[^[]*])|([-_:/.,()\s]+)|(T|t|yyyy|yy?|MM?M?M?|Do|dd?|hh?|HH?|mm?|ss?|z|ZZ?)/g,this.match1=/\d/,this.match2=/\d\d/,this.match3=/\d{3}/,this.match4=/\d{4}/,this.match1to2=/\d\d?/,this.matchSigned=/[+-]?\d+/,this.matchOffset=/[+-]\d\d:?(\d\d)?|Z/,this.matchWord=/\d*[^-_:/,()\s\d]+/,this.zoneExpressions=[this.matchOffset,(t,e)=>{t.offset=this.offsetFromString(e)}],this.expressions={t:[this.matchWord,(t,e)=>{t.afternoon=this.meridiemMatch(e)}],T:[this.matchWord,(t,e)=>{t.afternoon=this.meridiemMatch(e)}],fff:[this.match3,(t,e)=>{t.milliseconds=+e}],s:[this.match1to2,this.addInput("seconds")],ss:[this.match1to2,this.addInput("seconds")],m:[this.match1to2,this.addInput("minutes")],mm:[this.match1to2,this.addInput("minutes")],H:[this.match1to2,this.addInput("hours")],h:[this.match1to2,this.addInput("hours")],HH:[this.match1to2,this.addInput("hours")],hh:[this.match1to2,this.addInput("hours")],d:[this.match1to2,this.addInput("day")],dd:[this.match2,this.addInput("day")],Do:[this.matchWord,(e,s)=>{if([e.day]=s.match(/\d+/),this.localization.ordinal)for(let t=1;t<=31;t+=1)this.localization.ordinal(t).replace(/[\[\]]/g,"")===s&&(e.day=t)}],M:[this.match1to2,this.addInput("month")],MM:[this.match2,this.addInput("month")],MMM:[this.matchWord,(t,e)=>{const s=this.getAllMonths(),o=this.getAllMonths("short");e=(o||s.map(t=>t.slice(0,3))).indexOf(e)+1;if(e<1)throw new Error;t.month=e%12||e}],MMMM:[this.matchWord,(t,e)=>{const s=this.getAllMonths();e=s.indexOf(e)+1;if(e<1)throw new Error;t.month=e%12||e}],y:[this.matchSigned,this.addInput("year")],yy:[this.match2,(t,e)=>{t.year=this.parseTwoDigitYear(e)}],yyyy:[this.match4,this.addInput("year")],Z:this.zoneExpressions,ZZ:this.zoneExpressions},this.parseFormattedInput=e=>{this.localization.format||this.errorMessages.customDateFormatError("No format was provided");try{if(-1<["x","X"].indexOf(this.localization.format))return new this.DateTime(("X"===this.localization.format?1e3:1)*e);const M=this.makeParser(this.localization.format);var{year:s,month:o,day:i,hours:r,minutes:a,seconds:n,milliseconds:h,zone:d}=M(e);const y=new this.DateTime;var m=i||(s||o?1:y.getDate()),c=s||y.getFullYear();let t=0;s&&!o||(t=0<o?o-1:y.getMonth());var l=r||0,u=a||0,p=n||0,f=h||0;return d?new this.DateTime(Date.UTC(c,t,m,l,u,p,f+60*d.offset*1e3)):new this.DateTime(c,t,m,l,u,p,f)}catch(t){return this.errorMessages.customDateFormatError(`Unable to parse provided input: ${e}, format: `+this.localization.format),new this.DateTime("")}},this.DateTime=t,this.errorMessages=e}getAllMonths(t="long"){const e=new Intl.DateTimeFormat(this.localization.locale,{month:t}).format;return[...Array(12).keys()].map(t=>e(new Date(2021,t)))}replaceExtendedTokens(t){return t.replace(/(\[[^\]]+])|(MMMM|MM|dd|dddd)/g,(t,e,s)=>e||s.slice(1))}replaceTokens(t,i){return t.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g,(t,e,s)=>{var o=s&&s.toUpperCase();return e||this.englishFormats[s]||this.replaceExtendedTokens(i[o])})}parseTwoDigitYear(t){return(t=+t)+(68<t?1900:2e3)}offsetFromString(t){if(!t)return 0;if("Z"===t)return 0;var t=t.match(/([+-]|\d\d)/g),e=60*t[1]+(+t[2]||0);return 0===e?0:"+"===t[0]?-e:e}addInput(s){return(t,e)=>{t[s]=+e}}meridiemMatch(t){const e=new Intl.DateTimeFormat(this.localization.locale,{hour:"numeric",hour12:!0}).formatToParts(new Date(2022,3,4,13)).find(t=>"dayPeriod"===t.type)?.value;return t.toLowerCase()===e.toLowerCase()}correctHours(t){var e,s=t["afternoon"];void 0!==s&&(e=t["hours"],s?e<12&&(t.hours+=12):12===e&&(t.hours=0),delete t.afternoon)}makeParser(t){const n=(t=this.replaceTokens(t,this.localization.dateFormats)).match(this.formattingTokens),h=n["length"];for(let t=0;t<h;t+=1){const o=n[t];var e=this.expressions[o],s=e&&e[0],e=e&&e[1];n[t]=e?{regex:s,parser:e}:o.replace(/^\[|]$/g,"")}return s=>{var o={};for(let t=0,e=0;t<h;t+=1){var i=n[t];if("string"==typeof i)e+=i.length;else{const{regex:r,parser:a}=i;i=s.slice(e),i=r.exec(i)[0];a.call(this,o,i),s=s.replace(i,"")}}return this.correctHours(o),o}}format(e){if(!e)return e;if("null"===JSON.stringify(e))return"Invalid Date";const t=this.replaceTokens(this.localization.format||this.englishFormats.L+", "+this.englishFormats.LT,this.localization.dateFormats);var s=t=>new Intl.DateTimeFormat(this.localization.locale,t).format(e);const o={yy:s({year:"2-digit"}),yyyy:e.year,M:s({month:"numeric"}),MM:e.monthFormatted,MMM:this.getAllMonths("short")[e.getMonth()],MMMM:this.getAllMonths()[e.getMonth()],d:e.date,dd:e.dateFormatted,ddd:s({weekday:"short"}),dddd:s({weekday:"long"}),H:e.getHours(),HH:e.hoursFormatted,h:12<e.hours?e.hours-12:e.hours,hh:e.twelveHoursFormatted,t:e.meridiem(),T:e.meridiem().toUpperCase(),m:e.minutes,mm:e.minutesFormatted,s:e.seconds,ss:e.secondsFormatted,fff:e.getMilliseconds()};return t.replace(this.REGEX_FORMAT,(t,e)=>e||o[t])}}return(t,e,s)=>{const o=new i(e.DateTime,e.ErrorMessages);e.Dates.prototype.formatInput=function(t){return o.localization=this.optionsStore.options.localization,o.format(t)},e.Dates.prototype.parseInput=function(t){return o.localization=this.optionsStore.options.localization,o.parseFormattedInput(t)},e.DateTime.fromString=function(t,e){return o.localization=e,o.parseFormattedInput(t)}}});